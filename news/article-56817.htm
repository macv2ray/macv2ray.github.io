<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN" class="no-js">

<head>
        <link rel="canonical" href="https://macv2ray.github.io/news/article-56817.htm" />
    <meta charset="utf-8" />
    <title>Vue3 学习笔记&#8211;组合式 API</title>
        <meta name="description" content="先来介绍一下 Mixin  Mixin 提供了一种非常灵活的方式，来分发 Vue 组件中的可复用功能 一个 mixin 对象可以包含任意组件选项 当组件使用 mixin 对象时，所有 mixin 对象" />
        <link rel="icon" href="/assets/website/img/macv2ray/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Mac V2ray机场节点订阅分享">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://macv2ray.github.io/news/article-56817.htm" />
    <meta property="og:site_name" content="Mac V2ray机场节点订阅分享" />
    <meta property="og:title" content="Vue3 学习笔记&#8211;组合式 API" />
    <meta property="og:image" content="https://macv2ray.github.io/uploads/20240907-2/2c74f23940f4bf07e9c63f8f0d43cb87.webp" />
        <meta property="og:release_date" content="2025-02-15T05:21:23" />
    <meta property="og:updated_time" content="2025-02-15T05:21:23" />
        <meta property="og:description" content="先来介绍一下 Mixin  Mixin 提供了一种非常灵活的方式，来分发 Vue 组件中的可复用功能 一个 mixin 对象可以包含任意组件选项 当组件使用 mixin 对象时，所有 mixin 对象" />
        
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1" name="viewport" />

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Vue3 学习笔记&#8211;组合式 API">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- GLOBAL MANDATORY STYLES -->
    <link href="http://fonts.googleapis.com/css?family=Hind:300,400,500,600,700" rel="stylesheet" type="text/css">
    <link href="/assets/website/js/frontend/macv2ray/simple-line-icons/css/simple-line-icons.css" rel="stylesheet" type="text/css" />
    <link href="/assets/website/js/frontend/macv2ray/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- PAGE LEVEL PLUGIN STYLES -->
    <link href="/assets/website/css/macv2ray/animate.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/macv2ray/swiper/css/swiper.min.css" rel="stylesheet" type="text/css" />
    <link href="/assets/website/js/frontend/macv2ray/magnific-popup/magnific-popup.css" rel="stylesheet" type="text/css" />
    <!-- THEME STYLES -->
    <link href="/assets/website/css/macv2ray/layout.min.css" rel="stylesheet" type="text/css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-F98P9DTHJY"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-F98P9DTHJY');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body id="body" data-spy="scroll" data-target=".header" data-page="detail">
        <!--========== HEADER ==========-->
    <header class="header navbar-fixed-top">
        <!-- Navbar -->
        <nav class="navbar" role="navigation">
            <div class="container">
                <!-- Brand and toggle get grouped for better mobile display -->
                <div class="menu-container js_nav-item">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".nav-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="toggle-icon"></span>
                    </button>
                    <!-- Logo -->
                    <div class="logo">
                        <a class="logo-wrap" href="/">
                                                <span>Mac V2ray</span>
                                                </a>
                    </div>
                    <!-- End Logo -->
                </div>
                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse nav-collapse">
                    <div class="menu-container">
                        <ul class="nav navbar-nav navbar-nav-right">
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/">首页</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/free-nodes/">免费节点</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/paid-subscribe/">推荐机场</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/client.htm">客户端</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/news/">新闻资讯</a></li>
                                                    </ul>
                    </div>
                </div>
                <!-- End Navbar Collapse -->
            </div>
        </nav>
        <!-- Navbar -->
    </header>
    <!--========== END HEADER ==========-->
    <!--========== SLIDER ==========-->
    <div class="promo-block">
        <div class="container">
            <div class="margin-b-40">
                <h1 class="promo-block-title">Vue3 学习笔记&#8211;组合式 API</h1>
                <p class="promo-block-text">
                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                </p>
            </div>
        </div>
    </div>
    <!--========== SLIDER ==========-->
    <!--========== PAGE LAYOUT ==========-->
    <!-- Products -->
    <div id="products">
        <div class="container content-lg">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>先来介绍一下 Mixin</p> </h1> <p><span style="color:#ff9900;"><strong>Mixin</strong></span> 提供了一种非常灵活的方式，来分发 Vue 组件中的可复用功能</p> <p>一个 <span style="color:#ff9900;"><strong>mixin</strong></span> 对象可以包含任意组件选项</p> <p>当组件使用 <span style="color:#ff9900;"><strong>mixin</strong></span> 对象时，所有 <span style="color:#ff9900;"><strong>mixin</strong></span> 对象的选项将被&nbsp;<strong>混合&nbsp;</strong>进入该组件本身的选项</p> <pre><code class="language-javascript">// define a mixin object const myMixin = {   created() {     this.hello()   },   methods: {     hello() {       console.log('hello from mixin!')     }   } }  // define an app that uses this mixin const app = Vue.createApp({   mixins: [myMixin] })  app.mount('#mixins-basic') // =&gt; "hello from mixin!"</code></pre> <h2>1.1 合并规则</h2> <p><span style="color:#a2e043;"><strong>data 函数</strong></span></p> <p style="text-align:center;"><img fetchpriority="high" decoding="async" alt="" height="488" src="http://img.555519.xyz/uploads/20221230/78a16482cc8ce4e91da0c2a08561152b.jpg"></p> <p><span style="color:#a2e043;"><strong>&nbsp;钩子函数</strong></span></p> <p style="text-align:center;"><img decoding="async" alt="" height="364" src="http://img.555519.xyz/uploads/20221230/e9ea76b43b5267d960dd3f0d2f8c32c1.jpg"></p> <p><span style="color:#a2e043;"><strong>值为对象的选项，例如 methods、components</strong></span></p> <p style="text-align:center;"><img decoding="async" alt="" height="542" src="http://img.555519.xyz/uploads/20221230/c4bfa79f8231a36933a8c5aab8549fb1.jpg"></p> <h2>1.2 全局 mixin</h2> <p>一旦使用全局 mixin，它将影响每一个之后创建的组件</p> <pre><code class="language-javascript">const app = Vue.createApp({   myOption: 'hello!' })  // 为自定义的选项 'myOption' 注入一个处理器 app.mixin({   created() {     const myOption = this.$options.myOption     if (myOption) {       console.log(myOption)     }   } })  app.mount('#mixins-global') // =&gt; "hello!"</code></pre> <p><strong>和 mixin 有些类似的是 extends</strong></p> <hr/> </h1> <p>先来说说 <span style="color:#a2e043;"><strong>Options API</strong></span></p> <p><span style="color:#a2e043;"><strong>Options API </strong></span><span style="color:#494949;">的特点是在对应的属性中编写对应的功能模块</span></p> <p><span style="color:#494949;">比如：在 methods 中定义方法，在 computed 中定义计算属性</span></p> <p>缺点是：</p> <p>实现某一个功能时，该功能对应的代码逻辑会被&nbsp;<strong>拆分&nbsp;</strong>到各个属性中</p> <p>然而，当我们的组件变得更大、更复杂的时候，我们需要实现的功能也就越多</p> <p>每一个功能对应的代码逻辑都被拆的很分散，<strong>代码碎片化</strong></p> <p>这是&nbsp;<strong>不方便&nbsp;</strong>我们的去&nbsp;<strong>理解和维护&nbsp;</strong>这个组件的</p> <p><span style="color:#494949;">因此，在 Vue 组件中，我们可以在 </span><span style="color:#ff9900;"><strong>setup</strong></span><span style="color:#494949;"> 中使用组合式 API，来解决上述问题</span></p> <p><span style="color:#fe2c24;">注意：在 setup 中，我们应该避免使用 this</span></p> <h2>2.1 setup 组件选项</h2> <p>使用 setup 函数时，它将接受两个参数：</p> <ol> <li><span style="color:#a2e043;"><strong>props</strong></span></li> <li><span style="color:#a2e043;"><strong>context</strong></span></li> </ol> <h3>2.1.1 Props</h3> <p>对于 props 的相关内容，跟之前讲述的是一样的</p> <pre><code class="language-javascript">// MyBook.vue  export default {   props: {     title: String   },   setup(props) {     console.log(props.title)   } }</code></pre> <h3>2.1.2 Context</h3> <p>里面包含三个属性：</p> <ul> <li><span style="color:#a2e043;"><strong>attrs</strong></span></li> <li><span style="color:#a2e043;"><strong>slots</strong></span></li> <li><span style="color:#a2e043;"><strong>emit</strong></span></li> </ul> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="348" src="http://img.555519.xyz/uploads/20221230/3aba83e9055ee7372df4f5f34f62c329.jpg"></p> <h3>&nbsp;2.1.3 结合模板使用</h3> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="556" src="http://img.555519.xyz/uploads/20221230/a9b15bca37f7ec4ae5fe9786332b79ba.jpg"></p> <hr/> </h1> <p>包含以下部分：</p> <ul> <li>响应性基础 API</li> <li>refs</li> <li>computed 与 watch</li> </ul> <h2>3.1 响应性基础 API</h2> <h3>3.1.1 reactive</h3> <p>用法如下：</p> <pre><code class="language-javascript">const obj = reactive({ count: 0 })</code></pre> <p>返回对象的响应式副本</p> <p>响应式转换是深层的</p> <p><span style="color:#fe2c24;">注意：</span><span style="color:#956fe7;"><strong>reactive</strong></span> 对传入的类型是有限制的，它要求我们必须传入的是 <span style="color:#956fe7;"><strong>一个对象或者数组类型</strong></span></p> <p>那如果我们想传入基本数据类型的时候怎么办？</p> <p>Vue3 给我们提供了另外一个 <span style="color:#9c8ec1;"><strong>API：ref</strong></span>，稍后我们会对其进行讲解</p> <h3>3.1.2 readonly</h3> <p>接受一个对象或 ref 并返回原始对象的只读代理（也就是说它依然是一个 <span style="color:#fe2c24;"><strong>proxy </strong></span><span style="color:#be191c;"><strong>？</strong></span>）</p> <p>只读代理是深层的：任何被访问的嵌套 property 也是只读的</p> <p>在实际开发中，传入 readonly 的参数有三种类型：</p> <ol> <li><span style="color:#ff9900;"><strong>普通对象</strong></span></li> <li><span style="color:#ff9900;"><strong>reactive 返回的对象</strong></span></li> <li><span style="color:#ff9900;"><strong>ref 对象</strong></span></li> </ol> <p>用法如下：</p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="350" src="http://img.555519.xyz/uploads/20221230/7d4d2584a3997efea0ec6a79a1f85de2.jpg"></p> <p><span style="color:#fe2c24;">一般我们什么时候会用到 <strong>readonly</strong> 呢？</span></p> <p>我们给其它组件传递数据，希望它们使用我们传递过去的数据</p> <p>但是不允许它们修改的时候</p> <h3>3.1.3 isProxy</h3> <p>检查对象是否由 <span style="color:#ff9900;"><strong>reactive</strong></span> 或 <span style="color:#ff9900;"><strong>readonly</strong></span> 创建的 proxy</p> <h3>3.1.4 isReactive</h3> <p>检查对象是否由 <span style="color:#ff9900;"><strong>reactive </strong></span>创建的响应式代理</p> <p>用法如下：</p> <pre><code class="language-javascript">import { reactive, isReactive } from 'vue' export default {   setup() {     const state = reactive({       name: 'John'     })     console.log(isReactive(state)) // -&gt; true   } }</code></pre> <p><span style="color:#fe2c24;">注意：</span>如果该代理是 <span style="color:#ff9900;"><strong>readonly</strong></span> 创建的，但包裹了由 <span style="color:#ff9900;"><strong>reactive</strong></span> 创建的另一个代理，它也会返回 <span style="color:#faa572;"><strong>true</strong></span></p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="390" src="http://img.555519.xyz/uploads/20221230/efdabac4541fc4e1c501c7ad286ef45e.jpg"></p> <h3>3.1.5 isReadonly</h3> <p>检查对象是否由 <span style="color:#ff9900;"><strong>readonly</strong></span> 创建的只读代理</p> <h3>3.1.6 toRaw</h3> <p>返回 <span style="color:#ff9900;"><strong>reactive</strong></span> 或 <span style="color:#ff9900;"><strong>readonly</strong></span> 代理的原始对象</p> <h3>3.1.7 shallowReactive</h3> <p>创建一个响应式代理，它跟踪其自身 <span style="color:#ff9900;"><strong>property</strong></span> 的响应性，但不执行嵌套对象的深层响应式转换</p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="315" src="http://img.555519.xyz/uploads/20221230/577834582b9c7ab82cfdbc1171a54b0f.jpg"></p> <h3>3.1.8 shallowReadonly</h3> <p>创建一个 <span style="color:#ff9900;"><strong>proxy</strong></span>，使其自身的 <span style="color:#ff9900;"><strong>property</strong></span> 为只读，但不执行嵌套对象的深度只读转换 (暴露原始值)</p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="299" src="http://img.555519.xyz/uploads/20221230/9a596792a64a60db8898e16ba7f50bdd.jpg"></p> <h2>3.2 Refs</h2> <h3>3.2.1 ref</h3> <p>接受一个内部值并返回一个响应式且可变的 <strong>ref</strong> 对象</p> <p><strong>ref</strong> 对象具有指向内部值的单个 <strong>property</strong>&nbsp;<span style="color:#ff9900;"><strong><span style="background-color:#f3f3f4;">.value</span></strong></span></p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="177" src="http://img.555519.xyz/uploads/20221230/3ba422c124f2da8c17c1123ffd078bb6.jpg"></p> <p>这里有两个注意事项：</p> <ol> <li>在&nbsp;<span style="color:#fe2c24;">模板中引入 ref 的值&nbsp;</span>时，Vue 会自动帮我们进行&nbsp;<span style="color:#fe2c24;">解包操作</span>，所以我们&nbsp;<span style="color:#fe2c24;">不需要&nbsp;</span>在模板中通过 ref.value 的方式来使用</li> <li>在 <span style="color:#fe2c24;">setup 函数内部</span>，它任然是一个 <span style="color:#fe2c24;">ref 引用</span>，所以对其进行操作时，我们依然需要&nbsp;<span style="color:#fe2c24;">使用 ref.value 的方式</span> </li> </ol> <p><span style="color:#fe2c24;">如果将 ref 放到一个 reactive 的属性中，那么在模板中使用时会自动解包？</span></p> <hr/> </h1> <h2>4.1 computed</h2> <p>接受一个 getter 函数，并为从 getter 返回的值返回一个&nbsp;<span style="color:#fe2c24;">不变的&nbsp;</span>响应式 ref 对象</p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="172" src="http://img.555519.xyz/uploads/20221230/ee8d647b604bd1f974dce577e1aa7ae9.jpg"></p> <p>使用具有 get 和 set 函数的对象来创建&nbsp;<span style="color:#fe2c24;">可写&nbsp;</span>的 ref 对象</p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="241" src="http://img.555519.xyz/uploads/20221230/9672d581c0b12d4f1e40ee6ed48b956f.jpg"></p> <h2>4.2 watchEffect</h2> <p>在响应式地跟踪其依赖项时&nbsp;<span style="color:#fe2c24;">立即运行&nbsp;</span>一个函数，并在&nbsp;<span style="color:#fe2c24;">更改&nbsp;</span>依赖项时&nbsp;<span style="color:#fe2c24;">重新运行&nbsp;</span>它</p> <pre><code class="language-javascript">const count = ref(0)  watchEffect(() =&gt; console.log(count.value)) // -&gt; logs 0  setTimeout(() =&gt; {   count.value++   // -&gt; logs 1 }, 100)</code></pre> <h3>&nbsp;4.2.1 停止监听</h3> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="171" src="http://img.555519.xyz/uploads/20221230/8575d41290cca5195fd7bca2c72db32d.jpg"></p> <h3>4.2.2&nbsp;清除副作用</h3> <p>有时副作用函数会执行一些异步的副作用，这些响应需要在其失效时清除</p> <p style="text-align:center;"><img loading="lazy" decoding="async" alt="" height="222" src="http://img.555519.xyz/uploads/20221230/bd077cf4c845d3d828b5666910731e8b.jpg"></p> <p><span style="color:#fe2c24;">待更...</span></p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-56258.htm">包含动物注射疫苗简报怎么写的词条</a></p>
                                        <p>下一个：<a href="/news/article-56818.htm">宠物粮食品牌上市公司有几家公司啊（宠物粮行业）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-20522.htm" title="楼房养猫的十大禁忌（猫爬过的床单有细菌吗）">楼房养猫的十大禁忌（猫爬过的床单有细菌吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-17-node-share-links.htm" title="Mac V2ray|1月17日→22.7M/S|最新Shadowrocket/SSR/V2ray/Clash免费节点链接地址">Mac V2ray|1月17日→22.7M/S|最新Shadowrocket/SSR/V2ray/Clash免费节点链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-12-node-share-links.htm" title="Mac V2ray|1月12日→19.4M/S|最新Shadowrocket/V2ray/Clash/SSR免费节点链接地址">Mac V2ray|1月12日→19.4M/S|最新Shadowrocket/V2ray/Clash/SSR免费节点链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-4-clash-v2ray-ss-ssr.htm" title="1月4日→22.6M/S|2025年最新免费节点Mac V2ray订阅链接地址">1月4日→22.6M/S|2025年最新免费节点Mac V2ray订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-57381.htm" title="领养宠物哪个平台好（领养宠物狗的平台）">领养宠物哪个平台好（领养宠物狗的平台）</a></li>
                        <li class="py-2"><a href="/news/article-46344.htm" title="MySQL之内连接、外连接的含义和具体使用">MySQL之内连接、外连接的含义和具体使用</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-27-free-high-speed-nodes.htm" title="12月27日→18.8M/S|2024年最新免费节点Mac V2ray订阅链接地址">12月27日→18.8M/S|2024年最新免费节点Mac V2ray订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-8-free-node-subscribe-links.htm" title="Mac V2ray|2月8日→20.8M/S|最新V2ray/SSR/Clash/Shadowrocket免费节点链接地址">Mac V2ray|2月8日→20.8M/S|最新V2ray/SSR/Clash/Shadowrocket免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-30268.htm" title="新手开网店适合开什么店（拼多多网店能挣钱吗）">新手开网店适合开什么店（拼多多网店能挣钱吗）</a></li>
                        <li class="py-2"><a href="/news/article-46822.htm" title="Eureka Server及Client 配置信息详解">Eureka Server及Client 配置信息详解</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">51</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!-- End Products -->
        <!--========== FOOTER ==========-->
    <footer class="footer">
        <!-- Copyright -->
        <div class="content container">
            <div class="row">
                <div class="col-xs-12 text-center">
                    <p class="margin-b-0">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <a href="/">Mac V2ray机场节点订阅分享</a> 版权所有 Powered by WordPress
                    </p>
                </div>
            </div>
            <!--// end row -->
        </div>
        <!-- End Copyright -->
    </footer>
    <!--========== END FOOTER ==========-->
    <!-- Back To Top -->
    <a href="javascript:void(0);" class="js-back-to-top back-to-top">Top</a>
    <!-- JAVASCRIPTS(Load javascripts at bottom, this will reduce page load time) -->
    <!-- CORE PLUGINS -->
    <script src="/assets/website/js/frontend/macv2ray/jquery.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/macv2ray/jquery-migrate.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/macv2ray/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL PLUGINS -->
    <script src="/assets/website/js/frontend/macv2ray/jquery.easing.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/macv2ray/jquery.back-to-top.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/macv2ray/jquery.smooth-scroll.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/macv2ray/jquery.wow.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/macv2ray/swiper/js/swiper.jquery.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/macv2ray/magnific-popup/jquery.magnific-popup.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/macv2ray/masonry/jquery.masonry.pkgd.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/macv2ray/masonry/imagesloaded.pkgd.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL SCRIPTS -->
    <script src="/assets/website/js/frontend/macv2ray/layout.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/macv2ray/components/wow.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/macv2ray/components/swiper.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/macv2ray/components/maginific-popup.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/macv2ray/components/masonry.min.js" type="text/javascript"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>